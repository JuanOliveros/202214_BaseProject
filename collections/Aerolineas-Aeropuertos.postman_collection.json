{
	"info": {
		"_postman_id": "f1703ba2-dab6-41e3-ae39-1380c2118fae",
		"name": "Aerolineas-Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20354032"
	},
	"item": [
		{
			"name": "Asociar un aeropuerto a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"aerolineaId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{aeropuertoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{aeropuertoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un aeropuerto a una aerolínea 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"aerolineaId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{aeropuertoId_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{aeropuertoId_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un aeropuerto que no existe a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{invalid_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los aeropuertos que cubre una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{aeropuertoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{aeropuertoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto asociado a una aerolínea Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{invalid_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los aeropuertos que están asociados a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{aeropuertoId_3}}\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los aeropuertos asociados a una aerolínea, con un aeropuerto inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{aeropuertoId_3}}\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{invalid_id}}/aeropuertos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{invalid_id}}",
						"aeropuertos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un aeropuerto previamente asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId}}/aeropuertos/{{aeropuertoId_3}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId}}",
						"aeropuertos",
						"{{aeropuertoId_3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un aeropuerto que no estaba previamente asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no esta asociado con la aerolinea dada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aerolineas/{{aerolineaId_2}}/aeropuertos/{{aeropuertoId_3}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolineas",
						"{{aerolineaId_2}}",
						"aeropuertos",
						"{{aeropuertoId_3}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}